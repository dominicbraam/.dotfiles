#!/bin/sh
#
# https://github.com/ericmurphyxyz/dotfiles/blob/master/.local/bin/batterynotify
# icons: https://materialdesignicons.com/

# Xdbus is generated by the custom script dbus_var_handler.sh
# It is necessary because cron does not see some env variables that are needed for notify-send
if [ -r $HOME/.dotfiles/custom_config/dbus/Xdbus ]; then
  source $HOME/.dotfiles/custom_config/dbus/Xdbus
fi

# Battery percentage at which to notify
WARNING_LEVEL=10
BATTERY_DISCHARGING=`acpi -b | grep "Battery 0" | grep -c "Discharging"`
BATTERY_LEVEL=`acpi -b | grep "Battery 0" | grep -P -o '[0-9]+(?=%)'`

# Use two files to store whether we've shown a notification or not (to prevent multiple notifications)
EMPTY_FILE=/tmp/batteryempty
FULL_FILE=/tmp/batteryfull

# Reset notifications if the computer is charging/discharging
if [ $BATTERY_DISCHARGING -eq 1 ] && [ -f $FULL_FILE ]; then
    rm $FULL_FILE
elif [ $BATTERY_DISCHARGING -eq 0 ] && [ -f $EMPTY_FILE ]; then
    rm $EMPTY_FILE
fi

# If the battery is charging and is full (and has not shown notification yet)
if [ $BATTERY_LEVEL -gt 98 ] && [ $BATTERY_DISCHARGING -eq 0 ] && [ ! -f $FULL_FILE ]; then
    notify-send "Battery Charged" "Battery is fully charged." -i "$HOME/.dotfiles/icons/battery-charging-100.png" -r 9991
    touch $FULL_FILE
# If the battery is low and is not charging (and has not shown notification yet)
elif [ $BATTERY_LEVEL -le $WARNING_LEVEL ] && [ $BATTERY_DISCHARGING -eq 1 ] && [ ! -f $EMPTY_FILE ]; then
    notify-send "Low Battery" "${BATTERY_LEVEL}% of battery remaining." -u  critical -i "$HOME/.dotfiles/icons/battery-10.png" -r 9991
    touch $EMPTY_FILE
fi
